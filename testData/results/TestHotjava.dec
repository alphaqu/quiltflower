public class TestHotjava {
   public void test() {
      System.out.println("Hello!");// 3
   }// 2

   public void testJsr() {
      try {
         System.out.println("Try");// 7 8
      } finally {
         System.out.println("Jsr");
      }

   }// 10

   // $FF: Could not inline inconsistent finally blocks
   public void testMonitor1() {
      synchronized(this){}// 15

      try {
         System.out.println("Synchronized");// 16
      } catch (Throwable var3) {
         throw var3;
      }

   }

   // $FF: Could not inline inconsistent finally blocks
   public void testMonitor2(Object var1) {
      synchronized(var1){}// 21

      try {
         System.out.println("Synchronized");// 22
      } catch (Throwable var4) {
         throw var4;
      }

   }

   // $FF: Could not inline inconsistent finally blocks
   public void testMonitor3() {
      synchronized(this){}// 27

      try {
         try {
            System.out.println("Try");// 28 29
         } finally {
            System.out.println("Jsr");
         }
      } catch (Throwable var10) {
         throw var10;
      }

   }
}

class 'TestHotjava' {
   method 'test ()V' {
      0      2
      1      2
      2      2
      3      2
      4      2
      5      2
      6      2
      7      2
      8      3
   }

   method 'testJsr ()V' {
      0      7
      1      7
      2      7
      3      7
      4      7
      5      7
      c      9
      d      9
      e      9
      f      9
      10      9
      11      9
      12      9
      18      12
   }

   method 'testMonitor1 ()V' {
      0      16
      3      16
      4      19
      5      19
      6      19
      7      19
      8      19
      9      19
      e      24
      11      21
   }

   method 'testMonitor2 (Ljava/lang/Object;)V' {
      0      28
      3      28
      4      31
      5      31
      6      31
      7      31
      8      31
      9      31
      e      36
      11      33
   }

   method 'testMonitor3 ()V' {
      0      40
      3      40
      4      44
      5      44
      6      44
      7      44
      8      44
      9      44
      12      46
      13      46
      14      46
      15      46
      16      46
      17      46
      18      46
      19      46
      26      52
      29      49
   }
}

Lines mapping:
2 <-> 4
3 <-> 3
7 <-> 8
8 <-> 8
10 <-> 13
15 <-> 17
16 <-> 20
21 <-> 29
22 <-> 32
27 <-> 41
28 <-> 45
29 <-> 45
Not mapped:
31
