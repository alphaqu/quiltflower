package pkg;

public class TestSynchronized {
   public void test1() {
      synchronized(this) {// 5
         ;
      }
   }// 8

   public void test2() {
      synchronized(new Object()) {// 11
         ;
      }
   }// 14

   public void test3() {
      Object o;
      synchronized(new Object()) {// 18
         o = new Object();// 19
         System.out.println(o);// 20
      }// 21

      System.out.println(o);// 22
   }// 23

   public void test4() {
      Integer o;
      synchronized(1) {// 27
         o = 1;// 28
         System.out.println(o);// 29
      }// 30

      System.out.println(o);// 31
   }// 32

   public void test5(int i) {
      try {
         while(true) {
            synchronized(this) {// 37
               while(i >= i) {// 38
                  this.wait();// 39
               }
            }

            synchronized(this) {// 43
               this.notifyAll();// 44
            }// 45
         }
      } catch (Exception var7) {// 47
         throw new RuntimeException(var7);// 48
      }
   }

   public void test6() {
      while(true) {
         synchronized(this) {// 54
            ;
         }// 56
      }
   }

   public void test7(int i) {
      synchronized(this) {// 61
         while(i > 0) {// 62
            --i;// 63
            System.out.println(i);// 64
         }

      }
   }// 67

   public void test8() {
      try {
         synchronized(this) {// 71
            this.notifyAll();// 72
         }// 73
      } finally {
         synchronized(this) {// 75
            this.notifyAll();// 76
         }// 77
      }

   }// 79

   public void test9(int i) {
      try {
         label36: {
            System.out.println(0);// 84
            synchronized(this) {// 86
               System.out.println(1);// 87
               if (i > 0) {// 88
                  break label36;
               }

               System.out.println(2);// 91
            }

            System.out.println(3);// 94
         }
      } catch (Exception var5) {// 95
         var5.printStackTrace();// 96
      }

      if (i > 2) {// 99
         System.out.println("Hello!");// 100
      }

   }// 102

   public void test10(int i) {
      try {
         label35: {
            System.out.println(0);// 107
            synchronized(this) {// 108
               System.out.println(1);// 109
               if (i > 0) {// 110
                  break label35;
               }

               System.out.println(2);// 114
            }

            System.out.println(3);// 117
         }
      } catch (Exception var5) {// 119
         var5.printStackTrace();// 120
      }

      if (i > 2) {// 123
         System.out.println("Hello!");// 124
      }

   }// 126

   public void test11(int i) {
      switch(i) {// 129
      case 0:
         synchronized(this) {// 131
            break;
         }// 132
      case 1:
         synchronized(this) {// 135
            System.out.println(1);// 136
            break;
         }// 137
      case 2:
         System.out.println(2);// 140
         synchronized(this) {// 141
            break;
         }// 142
      default:
         System.out.println(0);// 145
      }

   }// 147

   public void test12(int i) {
      synchronized(this) {// 151
         label94: {
            System.out.println(1);// 152

            while(i > 0) {// 153
               --i;// 154
               System.out.println(1.5);// 155

               try {
                  System.out.println(1.6);// 157
               } finally {
                  System.out.println(1.7);// 159
                  if (i > 5) {// 160
                     break label94;
                  }

               }
            }

            System.out.println(2);// 166
            if (i > -2) {// 167
               System.out.println(3);// 168
            }
         }
      }

      if (i > 2) {// 172
         System.out.println("Hello!");// 173
      }

   }// 175
}

class 'pkg/TestSynchronized' {
   method 'test1 ()V' {
      0      4
      3      4
      e      7
   }

   method 'test2 ()V' {
      9      10
      14      13
   }

   method 'test3 ()V' {
      b      17
      13      18
      14      19
      15      19
      16      19
      17      19
      18      19
      19      19
      1a      19
      1c      20
      25      22
      26      22
      27      22
      28      22
      29      22
      2a      22
      2b      22
      2c      23
   }

   method 'test4 ()V' {
      0      27
      1      27
      2      27
      3      27
      8      27
      9      28
      a      28
      b      28
      c      28
      d      28
      e      29
      f      29
      10      29
      11      29
      12      29
      13      29
      14      29
      16      30
      1f      32
      20      32
      21      32
      22      32
      23      32
      24      32
      25      32
      26      33
   }

   method 'test5 (I)V' {
      0      38
      3      38
      4      39
      5      39
      6      39
      9      40
      a      40
      b      40
      c      40
      1a      44
      1d      44
      1e      45
      1f      45
      20      45
      21      45
      23      46
      31      48
      3a      49
   }

   method 'test6 ()V' {
      0      55
      3      55
      5      57
   }

   method 'test7 (I)V' {
      0      62
      3      62
      4      63
      5      63
      8      64
      9      64
      a      64
      b      65
      c      65
      d      65
      e      65
      f      65
      10      65
      11      65
      1f      69
   }

   method 'test8 ()V' {
      0      73
      3      73
      4      74
      5      74
      6      74
      7      74
      9      75
      27      77
      28      77
      2b      77
      2c      77
      2e      78
      2f      78
      30      78
      31      78
      34      79
      43      82
   }

   method 'test9 (I)V' {
      0      87
      1      87
      2      87
      3      87
      4      87
      5      87
      6      87
      7      88
      a      88
      b      89
      c      89
      d      89
      e      89
      f      89
      10      89
      11      89
      12      90
      13      90
      1b      94
      1c      94
      1d      94
      1e      94
      1f      94
      20      94
      21      94
      2c      97
      2d      97
      2e      97
      2f      97
      30      97
      36      99
      38      100
      3b      103
      3c      103
      3d      103
      40      104
      41      104
      42      104
      43      104
      44      104
      45      104
      48      107
   }

   method 'test10 (I)V' {
      0      112
      1      112
      2      112
      3      112
      4      112
      5      112
      6      112
      7      113
      a      113
      b      114
      c      114
      d      114
      e      114
      f      114
      10      114
      11      114
      12      115
      13      115
      1b      119
      1c      119
      1d      119
      1e      119
      1f      119
      20      119
      21      119
      2c      122
      2d      122
      2e      122
      2f      122
      30      122
      36      124
      38      125
      3b      128
      3c      128
      3d      128
      40      129
      41      129
      42      129
      43      129
      44      129
      45      129
      48      132
   }

   method 'test11 (I)V' {
      0      135
      1      135
      1c      137
      1f      137
      21      139
      2a      141
      2d      141
      2e      142
      2f      142
      30      142
      31      142
      32      142
      33      142
      34      142
      36      144
      41      146
      42      146
      43      146
      44      146
      45      146
      46      146
      47      146
      48      147
      4b      147
      4d      149
      58      151
      59      151
      5a      151
      5b      151
      5c      151
      5f      154
   }

   method 'test12 (I)V' {
      0      157
      3      157
      4      159
      5      159
      6      159
      7      159
      8      159
      b      161
      c      161
      f      162
      10      162
      11      162
      12      163
      13      163
      14      163
      15      163
      16      163
      17      163
      18      163
      1b      166
      1c      166
      1d      166
      1e      166
      1f      166
      20      166
      21      166
      37      168
      38      168
      39      168
      3a      168
      3b      168
      3c      168
      3d      168
      3e      169
      3f      169
      40      169
      41      169
      42      169
      50      176
      51      176
      52      176
      53      176
      54      176
      55      176
      56      176
      57      177
      58      177
      59      177
      5a      177
      5d      178
      5e      178
      5f      178
      60      178
      61      178
      70      183
      71      183
      72      183
      75      184
      76      184
      77      184
      78      184
      79      184
      7a      184
      7d      187
   }
}

Lines mapping:
5 <-> 5
8 <-> 8
11 <-> 11
14 <-> 14
18 <-> 18
19 <-> 19
20 <-> 20
21 <-> 21
22 <-> 23
23 <-> 24
27 <-> 28
28 <-> 29
29 <-> 30
30 <-> 31
31 <-> 33
32 <-> 34
37 <-> 39
38 <-> 40
39 <-> 41
43 <-> 45
44 <-> 46
45 <-> 47
47 <-> 49
48 <-> 50
54 <-> 56
56 <-> 58
61 <-> 63
62 <-> 64
63 <-> 65
64 <-> 66
67 <-> 70
71 <-> 74
72 <-> 75
73 <-> 76
75 <-> 78
76 <-> 79
77 <-> 80
79 <-> 83
84 <-> 88
86 <-> 89
87 <-> 90
88 <-> 91
91 <-> 95
94 <-> 98
95 <-> 100
96 <-> 101
99 <-> 104
100 <-> 105
102 <-> 108
107 <-> 113
108 <-> 114
109 <-> 115
110 <-> 116
114 <-> 120
117 <-> 123
119 <-> 125
120 <-> 126
123 <-> 129
124 <-> 130
126 <-> 133
129 <-> 136
131 <-> 138
132 <-> 140
135 <-> 142
136 <-> 143
137 <-> 145
140 <-> 147
141 <-> 148
142 <-> 150
145 <-> 152
147 <-> 155
151 <-> 158
152 <-> 160
153 <-> 162
154 <-> 163
155 <-> 164
157 <-> 167
159 <-> 169
160 <-> 170
166 <-> 177
167 <-> 178
168 <-> 179
172 <-> 184
173 <-> 185
175 <-> 188
Not mapped:
7
13
41
66
78
89
92
97
111
115
121
133
138
143
161
163
170
